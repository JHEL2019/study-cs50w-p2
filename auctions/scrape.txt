from django.http import HttpResponseRedirect
from django.shortcuts import render

from .forms import NameForm

def get_name(request):
    # if this is a POST request we need to process the form data
    if request.method == 'POST':
        # create a form instance and populate it with data from the request:
        form = NameForm(request.POST)
        # check whether it's valid:
        if form.is_valid():
            # process the data in form.cleaned_data as required
            # ...
            # redirect to a new URL:
            return HttpResponseRedirect('/thanks/')

    # if a GET (or any other method) we'll create a blank form
    else:
        form = NameForm()

    return render(request, 'name.html', {'form': form})


    ---

            <!-- {{ user.id == bid_max.user }}<br> -->


        
        user: {{ user.id }}<br>
        user name: {{ user.username }}<br>
        bid_max.id: {{ bid_max.user }}<br>
        bid_max.user: {{ bid_max.user__username }}<br>

        | truncatewords:30

                    
        highest bid: <br>
        user: {{ bid_max.user }}<br>
        user name: {{ bid_max.user__username }}<br>
        amount: {{ bid_max.amount }}<br>

-----

'''
    def clean(self):
        amount = self.cleaned_data.get('amount')
        print()
        print("Error", Bid.objects.values('listing__min_price'))
        return

        if amount <= Bid.objects.all()[0]:
            print("Error", Bid.objects.all()[0])
            raise ValidationError("Yor bid must be higher than starting price")
        return amount



    amount = IntegerField(validators=[MinValueValidator(self.objects.all()[0].values('min_price'), message="Your bid must be higher than the starting price")])
   
    def clean(self):
        amount = 
        if Bid.objects.filter(listing__min_price__gt=F('amount')):
            raise ValidationError("Yor bid must be higher than starting price")
    '''